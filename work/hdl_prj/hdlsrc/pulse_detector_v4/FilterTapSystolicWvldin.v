// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\pulse_detector_v4\FilterTapSystolicWvldin.v
// Created: 2023-07-02 17:41:51
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FilterTapSystolicWvldin
// Source Path: pulse_detector_v4/Pulse Detector/Discrete FIR Filter/Filter/subFilter/FilterTapSystolicWvldin
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FilterTapSystolicWvldin
          (clk,
           enb,
           dinReg2_0_re,
           coefIn_0,
           addin,
           dinRegVld,
           syncReset,
           dinDly2,
           tapout);


  input   clk;
  input   enb;
  input   signed [16:0] dinReg2_0_re;  // sfix17_En14
  input   signed [18:0] coefIn_0;  // sfix19_En23
  input   signed [47:0] addin;  // sfix48_En37
  input   dinRegVld;
  input   syncReset;
  output  signed [16:0] dinDly2;  // sfix17_En14
  output  signed [47:0] tapout;  // sfix48_En37


  reg signed [16:0] fTap_din_reg1;  // sfix17
  reg signed [18:0] fTap_coef_reg1;  // sfix19
  reg signed [16:0] fTap_din_reg2;  // sfix17
  reg signed [18:0] fTap_coef_reg2;  // sfix19
  reg signed [35:0] fTap_mult_reg;  // sfix36
  reg signed [47:0] fTap_addout_reg;  // sfix48
  reg signed [16:0] fTap_din_reg1_next;  // sfix17_En14
  reg signed [18:0] fTap_coef_reg1_next;  // sfix19_En23
  reg signed [16:0] fTap_din_reg2_next;  // sfix17_En14
  reg signed [18:0] fTap_coef_reg2_next;  // sfix19_En23
  reg signed [35:0] fTap_mult_reg_next;  // sfix36_En37
  reg signed [47:0] fTap_addout_reg_next;  // sfix48_En37
  reg signed [16:0] dinDly2_1;  // sfix17_En14
  reg signed [47:0] tapout_1;  // sfix48_En37
  reg signed [47:0] fTap_add_cast;  // sfix48_En37

  initial begin
    fTap_din_reg1 = 17'sb00000000000000000;
    fTap_coef_reg1 = 19'sb0000000000000000000;
    fTap_din_reg2 = 17'sb00000000000000000;
    fTap_coef_reg2 = 19'sb0000000000000000000;
    fTap_mult_reg = 36'sh000000000;
    fTap_addout_reg = 48'sh000000000000;
  end

  // FilterTapSystlicWvldIn
  always @(posedge clk)
    begin : fTap_process
      if (enb) begin
        if (syncReset == 1'b1) begin
          fTap_din_reg1 <= 17'sb00000000000000000;
          fTap_coef_reg1 <= 19'sb0000000000000000000;
          fTap_din_reg2 <= 17'sb00000000000000000;
          fTap_coef_reg2 <= 19'sb0000000000000000000;
          fTap_mult_reg <= 36'sh000000000;
          fTap_addout_reg <= 48'sh000000000000;
        end
        else begin
          fTap_din_reg1 <= fTap_din_reg1_next;
          fTap_coef_reg1 <= fTap_coef_reg1_next;
          fTap_din_reg2 <= fTap_din_reg2_next;
          fTap_coef_reg2 <= fTap_coef_reg2_next;
          fTap_mult_reg <= fTap_mult_reg_next;
          fTap_addout_reg <= fTap_addout_reg_next;
        end
      end
    end

  always @(addin, coefIn_0, dinReg2_0_re, dinRegVld, fTap_addout_reg, fTap_coef_reg1,
       fTap_coef_reg2, fTap_din_reg1, fTap_din_reg2, fTap_mult_reg) begin
    fTap_add_cast = 48'sh000000000000;
    fTap_din_reg1_next = fTap_din_reg1;
    fTap_coef_reg1_next = fTap_coef_reg1;
    fTap_din_reg2_next = fTap_din_reg2;
    fTap_coef_reg2_next = fTap_coef_reg2;
    fTap_mult_reg_next = fTap_mult_reg;
    fTap_addout_reg_next = fTap_addout_reg;
    if (dinRegVld) begin
      fTap_add_cast = {{12{fTap_mult_reg[35]}}, fTap_mult_reg};
      fTap_addout_reg_next = fTap_add_cast + addin;
      fTap_mult_reg_next = fTap_din_reg2 * fTap_coef_reg2;
      fTap_din_reg2_next = fTap_din_reg1;
      fTap_coef_reg2_next = fTap_coef_reg1;
      fTap_din_reg1_next = dinReg2_0_re;
      fTap_coef_reg1_next = coefIn_0;
    end
    dinDly2_1 = fTap_din_reg2;
    tapout_1 = fTap_addout_reg;
  end



  assign dinDly2 = dinDly2_1;

  assign tapout = tapout_1;

endmodule  // FilterTapSystolicWvldin

